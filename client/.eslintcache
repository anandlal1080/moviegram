[{"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\index.js":"1","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\App.js":"2","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\reducers\\index.js":"3","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\styles.js":"4","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\actions\\posts.js":"5","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Posts\\Posts.js":"6","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Form\\Form.js":"7","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\reducers\\posts.js":"8","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Posts\\styles.js":"9","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Form\\styles.js":"10","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\Post.js":"11","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\api\\index.js":"12","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\styles.js":"13","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\constants\\actionTypes.js":"14","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Navbar\\Navbar.js":"15","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Navbar\\styles.js":"16","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Home\\Home.js":"17","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Auth\\Auth.js":"18","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Auth\\styles.js":"19","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Auth\\Input.js":"20","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Auth\\icon.js":"21","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\reducers\\auth.js":"22","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\actions\\auth.js":"23","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\Reactions.js":"24","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Search\\movieSearch.js":"25","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Search\\styles.js":"26","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\reducers\\search.js":"27","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Navbar\\Reactions.js":"28"},{"size":480,"mtime":1611291956470,"results":"29","hashOfConfig":"30"},{"size":723,"mtime":1611480567506,"results":"31","hashOfConfig":"30"},{"size":162,"mtime":1611375975396,"results":"32","hashOfConfig":"30"},{"size":487,"mtime":1611346628674,"results":"33","hashOfConfig":"30"},{"size":1646,"mtime":1611609205273,"results":"34","hashOfConfig":"30"},{"size":812,"mtime":1611610059201,"results":"35","hashOfConfig":"30"},{"size":2493,"mtime":1611685364196,"results":"36","hashOfConfig":"30"},{"size":516,"mtime":1611347801793,"results":"37","hashOfConfig":"30"},{"size":422,"mtime":1611613054903,"results":"38","hashOfConfig":"30"},{"size":586,"mtime":1611684844330,"results":"39","hashOfConfig":"30"},{"size":3133,"mtime":1611467067470,"results":"40","hashOfConfig":"30"},{"size":1039,"mtime":1611700183997,"results":"41","hashOfConfig":"30"},{"size":1015,"mtime":1611261303108,"results":"42","hashOfConfig":"30"},{"size":327,"mtime":1611601334410,"results":"43","hashOfConfig":"30"},{"size":5457,"mtime":1611699954464,"results":"44","hashOfConfig":"30"},{"size":1219,"mtime":1611614959845,"results":"45","hashOfConfig":"30"},{"size":1303,"mtime":1611691775668,"results":"46","hashOfConfig":"30"},{"size":4728,"mtime":1611525271610,"results":"47","hashOfConfig":"30"},{"size":668,"mtime":1611368638120,"results":"48","hashOfConfig":"30"},{"size":1117,"mtime":1611375357884,"results":"49","hashOfConfig":"30"},{"size":514,"mtime":1611373656194,"results":"50","hashOfConfig":"30"},{"size":460,"mtime":1611378005105,"results":"51","hashOfConfig":"30"},{"size":582,"mtime":1611389284718,"results":"52","hashOfConfig":"30"},{"size":2001,"mtime":1611460439431,"results":"53","hashOfConfig":"30"},{"size":4208,"mtime":1611527646548,"results":"54","hashOfConfig":"30"},{"size":669,"mtime":1611684717074,"results":"55","hashOfConfig":"30"},{"size":1007,"mtime":1611518737287,"results":"56","hashOfConfig":"30"},{"size":1275,"mtime":1611699992393,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1qyuv49",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\index.js",[],["118","119"],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\App.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\reducers\\index.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\styles.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\actions\\posts.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Posts\\Posts.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Form\\Form.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\reducers\\posts.js",["120"],"import { FETCH_ALL, CREATE, UPDATE, DELETE } from \"../constants/actionTypes\";\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n    case UPDATE:\r\n      return posts.map((post) =>\r\n        post._id === action.payload._id ? action.payload : post\r\n      );\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Posts\\styles.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Form\\styles.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\Post.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\api\\index.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\styles.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\constants\\actionTypes.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Navbar\\Navbar.js",["121","122"],"import React, { useState, useEffect } from \"react\";\r\nimport { FETCH_ALL } from \"../../constants/actionTypes\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Avatar,\r\n  Button,\r\n  Typography,\r\n  CardActions,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport decode from \"jwt-decode\";\r\nimport useStyles from \"./styles\";\r\nimport { Likes, DisLikes, Watches } from \"./Reactions.js\";\r\nimport { getPosts } from \"../../actions/posts\";\r\nimport icon from \"../../images/movie-night.png\";\r\nimport { useStoreContext } from \"../../reducers/search\";\r\nimport { CLEAR_SEARCH } from \"../../constants/actionTypes\";\r\n\r\nlet likecounter = 0;\r\nlet disLikecounter = 0;\r\nlet watchcounter = 0;\r\nconst Navbar = () => {\r\n  const dataToFilter = useSelector((state) => state.posts);\r\n  const [state, clearState] = useStoreContext();\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  let id = \"\";\r\n  const likeFilter = () => {\r\n    if (user.result.googleId) {\r\n      id = user.result.googleId;\r\n    } else {\r\n      id = user.result._id;\r\n    }\r\n\r\n    const r = dataToFilter.filter((d) => d.likes.includes(id));\r\n    likecounter = likecounter + 1;\r\n    if (likecounter % 2 === 0) {\r\n      console.log(likecounter, \"like if statement\");\r\n      dispatch(getPosts());\r\n    } else {\r\n      dispatch({ type: FETCH_ALL, payload: r });\r\n      console.log(likecounter, \"like else statement\");\r\n    }\r\n  };\r\n  const disLikeFilter = () => {\r\n    if (user.result.googleId) {\r\n      id = user.result.googleId;\r\n    } else {\r\n      id = user.result._id;\r\n    }\r\n    const r = dataToFilter.filter((d) => d.dislikes.includes(id));\r\n    disLikecounter = disLikecounter + 1;\r\n\r\n    console.log(disLikecounter, \"above dislike if statement\");\r\n    if (disLikecounter % 2 === 0) {\r\n      console.log(disLikecounter, \" if dislike statement\");\r\n      dispatch(getPosts());\r\n    } else {\r\n      dispatch({ type: FETCH_ALL, payload: r });\r\n      console.log(disLikecounter, \"dislike else statement\");\r\n    }\r\n  };\r\n  const watchFilter = () => {\r\n    if (user.result.googleId) {\r\n      id = user.result.googleId;\r\n    } else {\r\n      id = user.result._id;\r\n    }\r\n    const r = dataToFilter.filter((d) => d.watch.includes(id));\r\n    watchcounter = watchcounter + 1;\r\n\r\n    console.log(watchcounter, \"watchcounter above if statement\");\r\n    if (watchcounter % 2 === 0) {\r\n      console.log(watchcounter, \"watch if statement\");\r\n      dispatch(getPosts());\r\n    } else {\r\n      dispatch({ type: FETCH_ALL, payload: r });\r\n      console.log(watchcounter, \"watch else statement\");\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    clearState({\r\n      type: CLEAR_SEARCH,\r\n    });\r\n\r\n    dispatch({ type: \"LOGOUT\" });\r\n    history.push(\"/\");\r\n\r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n      <div className={classes.brandContainer}>\r\n        <Typography\r\n          component={Link}\r\n          to=\"/\"\r\n          className={classes.heading}\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n        >\r\n          Moviegram\r\n        </Typography>\r\n        <img className={classes.image} src={icon} alt=\"icon\" height=\"60\" />\r\n      </div>\r\n      <Toolbar className={classes.toolbar}>\r\n        {user ? (\r\n          <div className={classes.profile}>\r\n            <CardActions className={classes.cardActions}>\r\n              <Button size=\"small\" color=\"primary\" onClick={() => likeFilter()}>\r\n                <Likes likecounter={likecounter} />\r\n              </Button>\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={() => disLikeFilter()}\r\n              >\r\n                <DisLikes disLikecounter={disLikecounter} />\r\n              </Button>\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={() => watchFilter()}\r\n              >\r\n                <Watches watchcounter={watchcounter} />\r\n              </Button>\r\n            </CardActions>\r\n            <div>\r\n              <Avatar\r\n                className={classes.purple}\r\n                alt={user.result.name}\r\n                src={user.result.imageUrl}\r\n              >\r\n                {user.result.name.charAt(0)}\r\n              </Avatar>\r\n              <Typography className={classes.userName} variant=\"h6\">\r\n                {user.result.name}\r\n              </Typography>\r\n            </div>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.logout}\r\n              color=\"secondary\"\r\n              onClick={logout}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <Button\r\n            component={Link}\r\n            to=\"/auth\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Navbar\\styles.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Home\\Home.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Auth\\Auth.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Auth\\styles.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Auth\\Input.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Auth\\icon.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\reducers\\auth.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\actions\\auth.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Posts\\Post\\Reactions.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Search\\movieSearch.js",["123"],"import React, { useState } from \"react\";\r\nimport { TextField, Button, Typography, Paper, List } from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport { useStoreContext } from \"../../reducers/search\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { API_CALL, CLEAR_SEARCH } from \"../../constants/actionTypes\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport { createPost } from \"../../actions/posts\";\r\n\r\nconst MovieSearch = ({ currentId, setCurrentId }) => {\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [state, apiDispatch] = useStoreContext();\r\n  const [movieName, setmovieName] = useState({\r\n    title: \"\",\r\n  });\r\n  const [postData, setPostData] = useState({\r\n    title: \"\",\r\n    synopsis: \"\",\r\n    tags: \"\",\r\n    imageUrl: \"\",\r\n  });\r\n\r\n  const Base_URL = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_API_KEY}&s=`;\r\n  const Title_URL = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_API_KEY}&i=`;\r\n\r\n  const handleApiSubmit = (e) => {\r\n    e.preventDefault();\r\n    const query = Base_URL + movieName.title;\r\n\r\n    fetch(query)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.Search.length > 0) {\r\n          apiDispatch({\r\n            type: API_CALL,\r\n            payload: data,\r\n          });\r\n        }\r\n        console.log(state);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    setmovieName({ title: \"\" });\r\n  };\r\n\r\n  const handleMovieSelect = ({ imdbID }) => {\r\n    const query = Title_URL + imdbID;\r\n\r\n    fetch(query)\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        if (currentId === 0) {\r\n          const postData2 = {\r\n            title: data.Title,\r\n            synopsis: data.Plot,\r\n            tags: data.Genre.split(\", \"),\r\n            imageUrl: data.Poster,\r\n          };\r\n\r\n          dispatch(createPost({ ...postData2, name: user?.result?.name }));\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    setmovieName({ title: \"\" });\r\n  };\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({\r\n      title: \"\",\r\n      synopsis: \"\",\r\n      tags: \"\",\r\n      imageUrl: \"\",\r\n    });\r\n    apiDispatch({\r\n      type: CLEAR_SEARCH,\r\n    });\r\n  };\r\n\r\n  if (!user?.result?.name) {\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Please Sign In to participate in the Watchlist\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleApiSubmit}\r\n      >\r\n        <Typography variant=\"h6\">Search for a Movie</Typography>\r\n        <TextField\r\n          name=\"movie\"\r\n          variant=\"outlined\"\r\n          label=\"Enter movie name here...\"\r\n          fullWidth\r\n          value={movieName.title}\r\n          onChange={(e) =>\r\n            setmovieName({ ...movieName, title: e.target.value })\r\n          }\r\n        />\r\n\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n      <List\r\n        component=\"nav\"\r\n        className={classes.root}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        {state.searchResults.map((movie) => (\r\n          <ListItem\r\n            divider\r\n            key={movie.imdbID}\r\n            button\r\n            onClick={() => {\r\n              handleMovieSelect(movie);\r\n            }}\r\n          >\r\n            <ListItemText primary={movie.Title + \" \" + movie.Year} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MovieSearch;\r\n","D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Search\\styles.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\reducers\\search.js",[],"D:\\CloudStation\\Bootcamp\\homework\\moviegram\\client\\src\\components\\Navbar\\Reactions.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":3,"column":1,"nodeType":"130","endLine":18,"endColumn":3},{"ruleId":"131","severity":1,"message":"132","line":26,"column":10,"nodeType":"133","messageId":"134","endLine":26,"endColumn":15},{"ruleId":"135","severity":1,"message":"136","line":108,"column":6,"nodeType":"137","endLine":108,"endColumn":16,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"139","line":21,"column":10,"nodeType":"133","messageId":"134","endLine":21,"endColumn":18},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["142"],"'postData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"145","text":"146"},[3237,3247],"[location, logout, user?.token]"]